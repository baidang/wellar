if(!window.console){
  window.console = function(m){
    alert(m);
  }
}
Date.prototype.format = function(format){
    var o = {
  "M+" :  this.getMonth()+1,  //month
  "d+" :  this.getDate(),     //day
  "h+" :  this.getHours(),    //hour
      "m+" :  this.getMinutes(),  //minute
      "s+" :  this.getSeconds(), //second
      "q+" :  Math.floor((this.getMonth()+3)/3),
      "S"  :  this.getMilliseconds() //millisecond
  };
   if(/(Y+)/.test(format)) {
    format = format.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));
   }
   for(var k in o) {
    if(new RegExp("("+ k +")").test(format)) {
      format = format.replace(RegExp.$1, RegExp.$1.length==1 ? o[k] : ("00"+ o[k]).substr((""+ o[k]).length));
    }
   }
 return format;
};

var JBE = window.JBE || {};
JBE.GI = {
    // host: 'http://api.jbe.geekint.com/api/'
    host: (function(){
        return 'http://jbe.im/api/';
        // var loc = location.origin + '/api/';
        // if(window.location.origin.search(/jbe.im/) > -1){// 线上环境
        //     return loc.replace('http://', 'http://');
        // }else{// 本地环境
        //     // return 'http://10.8.0.76:8080/api';
        //     return 'http://api.jbe.geekint.com/api/';
        // }
    })()

};
JBE.getQueryString = function (url){
    if(url) {
        url=url.substr(url.indexOf("?")+1);
    }
    var result = {}, queryString =url || location.search.substring(1),
       re = /([^&=]+)=([^&]*)/g, m;
  
    while (m = re.exec(queryString)) {
     result[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);
   }
  
   return result;
};
JBE.ajax = function(args){
    args.data = args.data || {}
    args.type = args.type || 'post';
    args.dataType = args.dataType || 'json';
    var def = $.Deferred();
    if(args.$loader){
        args.beforeSend = function() {
            $(args.$loader).show();
        }
    }
    $.ajax(args).done(function(resp){
        if(args.dataType == 'html'){
            def.resolve(resp);
            return ;
        }
        
        if(!resp){
            console.log('danger', '服务器无响应!');
            def.reject(resp);
        }else if(resp.code == -94){
            console.log('danger', '会话失效!');
            def.reject(resp);
        }else if(resp.code == -99){
            console.log('danger', '参数错误!');
            def.reject(resp);
            console.log(resp);
        }else if(resp.code <= 1){
            def.resolve(resp);
        }else{
            def.reject(resp);
        }
    })
    .done(function(){
        if(args.$loader){
            $(args.$loader).hide();
        }
    })
    .fail(function(){
        def.reject();
        console.warn('服务器接口无回应! path: ', args.url);
    })
    ;
    return def;
};


